                            | # Execution begins at address 0
0x000:                      | .pos 0
0x000: 30f40002000000000000 | irmovq stack, %rsp
                            | # Set up stack pointer
0x00a: 804800000000000000   | 	call main
                            | # Execute main program
0x013: 00                   | 	halt
                            | # Terminate program
                            | # Sample linked list
0x018:                      | 	.align 8
0x018:                      |   ele1:
0x018: 0a00000000000000     | 	.quad 0x00a
0x020: 2800000000000000     | 	.quad ele2
0x028:                      |   ele2:
0x028: b000000000000000     | 	.quad 0x0b0
0x030: 3800000000000000     | 	.quad ele3
0x038:                      |   ele3:
0x038: 000c000000000000     | 	.quad 0xc00
0x040: 0000000000000000     | 	.quad 0
0x048:                      | main:
0x048: 30f71800000000000000 | 	irmovq ele1,%rdi
0x052: 805c00000000000000   | 	call sumlist
0x05b: 90                   | 	ret
                            | # sum_list - Sum the elements of a linked list
                            | # start in %rdi
0x05c:                      | sumlist:    
0x05c: 6300                 |         xorq    %rax,%rax
                            | # sum = 0
0x05e: 6277                 |         andq    %rdi , %rdi
0x060: 739600000000000000   |         je  end                          
0x069: 50170000000000000000 | loop:   mrmovq  (%rdi) , %rcx
0x073: 6010                 |         addq    %rcx , %rax
0x075: 30f30800000000000000 |         irmovq  $8 , %rbx      
0x07f: 6037                 |         addq    %rbx , %rdi
0x081: 50770000000000000000 |         mrmovq (%rdi),  %rdi        
0x08b: 6277                 |         andq    %rdi , %rdi
0x08d: 746900000000000000   |         jne loop
0x096:                      | end:
0x096: 90                   |         ret
                            | # Stack starts here and grows to lower addresses
0x200:                      | .pos 0x200
0x200:                      | stack: 
