                            | # Execution begins at address 0
0x000:                      | .pos 0
0x000: 30f40002000000000000 |         irmovq stack, %rsp
                            | # Set up stack pointer
0x00a: 804800000000000000   | 	call main
                            | # Execute main program
0x013: 00                   | 	halt
                            | # Terminate program
                            | # Sample linked list
0x018:                      | .align 8
                            | # Source block
0x018:                      | src:
0x018: 0a00000000000000     | 	.quad 0x00a
0x020: b000000000000000     | 	.quad 0x0b0
0x028: 000c000000000000     | 	.quad 0xc00
                            | # Destination block
0x030:                      | dest:
0x030: 1101000000000000     | 	.quad 0x111
0x038: 2202000000000000     | 	.quad 0x222
0x040: 3303000000000000     | 	.quad 0x333
0x048:                      | main:
0x048: 30f71800000000000000 | 	irmovq src , %rdi
0x052: 30f63000000000000000 |         irmovq dest , %rsi
0x05c: 30f20300000000000000 |         irmovq $3 , %rdx
0x066: 807000000000000000   | 	call   copyblock
0x06f: 90                   | 	ret
                            | # sum_list - Recursive version of sum_list
                            | # start in %rdi
0x070:                      | copyblock:
0x070: 6300                 |         xorq    %rax , %rax
0x072:                      | loop:
0x072: 6222                 |         andq    %rdx , %rdx
0x074: 71b600000000000000   |         jle     end
0x07d: 50170000000000000000 |         mrmovq  (%rdi) , %rcx
0x087: 30f30800000000000000 |         irmovq  $8 , %rbx
0x091: 6037                 |         addq    %rbx , %rdi
0x093: 40160000000000000000 |         rmmovq  %rcx , (%rsi)
0x09d: 6036                 |         addq    %rbx , %rsi
0x09f: 6310                 |         xorq    %rcx , %rax
0x0a1: 30f30100000000000000 |         irmovq  $1 , %rbx
0x0ab: 6132                 |         subq    %rbx , %rdx
0x0ad: 707200000000000000   |         jmp     loop 
0x0b6:                      | end:
0x0b6: 90                   |         ret
                            | # Stack starts here and grows to lower addresses
0x200:                      | .pos 0x200
0x200:                      | stack:
